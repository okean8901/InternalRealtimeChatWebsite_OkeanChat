@model Internal_Real_time_Chat_Website.Models.ApplicationUser
@{
    ViewData["Title"] = "My Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
    <div class="bg-white rounded-xl shadow-lg p-8">
        <div class="flex flex-col md:flex-row md:items-center md:space-x-8">
            <!-- Avatar -->
            <div class="flex flex-col items-center md:items-start">
                <div class="relative">
                    <img src="@(string.IsNullOrEmpty(Model.Avatar) ? "/favicon.ico" : Model.Avatar)" alt="Avatar" class="w-28 h-28 rounded-full object-cover border border-gray-200" />
                    <button id="changeAvatarBtn" class="absolute bottom-0 right-0 bg-primary-600 text-white rounded-full p-2 shadow hover:bg-primary-700">
                        <i class="fas fa-camera"></i>
                    </button>
                </div>
                <input id="avatarFileInput" type="file" accept="image/*" class="hidden" />
                <p class="text-xs text-gray-500 mt-2">PNG, JPG, GIF, WEBP.</p>
            </div>

            <!-- Profile Form -->
            <div class="flex-1 mt-6 md:mt-0">
                <form asp-action="UpdateProfile" method="post" class="space-y-6">
                    @Html.AntiForgeryToken()

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
                        <input name="fullName" value="@Model.FullName" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                        <input value="@Model.Email" disabled class="w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg text-gray-500" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                        <textarea name="status" rows="3" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent" placeholder="Say something about yourself...">@Model.Status</textarea>
                        <div class="flex items-center justify-between mt-2">
                            <span class="text-xs text-gray-500">Max 280 characters</span>
                            <button formaction="/Profile/ClearStatus" formmethod="post" class="text-sm text-red-600 hover:text-red-700">Clear status</button>
                        </div>
                    </div>

                    <div class="flex justify-end">
                        <button type="submit" class="px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const changeAvatarBtn = document.getElementById('changeAvatarBtn');
            const avatarFileInput = document.getElementById('avatarFileInput');

            changeAvatarBtn.addEventListener('click', function () {
                avatarFileInput.click();
            });

            avatarFileInput.addEventListener('change', async function (e) {
                if (e.target.files.length === 0) return;
                const file = e.target.files[0];
                const formData = new FormData();
                formData.append('file', file);

                try {
                    const res = await fetch('/Profile/UploadAvatar', { method: 'POST', body: formData });
                    if (!res.ok) throw new Error('Upload failed');
                    const result = await res.json();
                    // Refresh avatar on page
                    const img = document.querySelector('img[alt="Avatar"]');
                    img.src = result.avatar;
                } catch (err) {
                    alert('Failed to upload avatar');
                } finally {
                    avatarFileInput.value = '';
                }
            });
        });
    </script>
}


